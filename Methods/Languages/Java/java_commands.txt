setup
	install java
		//open source java 
			sudo pacman -S jdk11-openjdk
		//open source java fx
			sudo pacman -S java11-openjfx
			//paths 
				/usr/lib/jvm/java-11-openjdk/jmods/
				/usr/lib/jvm/java-11-openjdk/lib/
	change active java version on archlinux
		archlinux-java
	variables setup
		//some systems
			export JAVA_HOME= /usr/java/jdk1.7.0_05/
			export PATH=${PATH}:/usr/java/jdk1.7.0_05/bin
            export CLASSPATH=/home/jack/java/classes
		//arch linux
			export JAVA_HOME=/usr/lib/jvm/java-11-openjdk/
			export PATH=${PATH}:/usr/lib/jvm/java-11-openjdk/bin
            //Dont pollute path constantly, as it is called alot
            export CLASSPATH=${CLASSPATH}:/usr/lib/jvm/java-11-openjdk/lib/[wantedFile.jar]
		//enable variables without restart
            source /root/.bash_profile	
        //maven
run java code
	compile java files (.java)
		//-d: specify .class file location, 
		//-g: gen all debug info, -noware: gen no warnings  
		javac {}...
        //run with a specifc file, list jar files via :
            javac -classpath /path/to/json.jar:. YourClass.java 
            //EG run Junit tests
            javac -classpath /usr/lib/jvm/java-11-openjdk/lib/junit.jar:. TestRunner.java 

	interprete java bytecode files 
		java {}
run java files
	java fileName.java
	java -jar jarName.jar
	
	
creating packages
	put a package statement on the first line
	to use a class in the same package you dont need a package prefix 
	package packageName;
		compile java programs with package statements
		javac -d Destination_folder file_name.java
	file name = public class name
	directory name = name of package





