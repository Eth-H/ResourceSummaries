Netcat>
    //Listen on a port
        nc -l 1337
    //Connect to a port
        nc 192.168.33.2 1337
    //Transfer files
        //Listen on port and send any output recevied content to [filename]
            nc -l 1337 > [filename]
        //Connect to computer and send the content of myfile
            nc 192.168.33.2 1337 < [localFilename]
SSH>
    //  /etc/passwd /etc/shadow /etc/passwd.
    //Connect
        //Connect to secure file server with credentials, add a custom port (otherwise 22 is used): -p
            ssh username@domain.com {}
        //If a keyfile is needed instead of a separate password
                ssh -i /path/to/keyfile username@ipaddress
    //Copy local file to remote server
        scp file.txt username@domain.com:/folder/file.txt
    //Copy remote file to local PC 
        scp username@domain.com:/folder/file.txt file.txt
    //Close connection
        exit
curl>
    //Perform HTTPS tasks, none: get request, --data "username=luffy&loggedin=true": post data, 
        curl https://example.com/index.php {} 			
wget>
    //Blank: Download webpages, -c: Continue stopped download
        wget {} [url/file]
Get info on domain>
    whois domain
    //DNS info
        dig [domain]
    //Reverse lookup host
        dig -x host
 net-tools>
    //considered deprecated, but widely avaliable
    netstat>
        //Check listening ports, -a: all sockets, -u: udp, -t: tcp 
        //-l: listening sockets, -p: PID and program name, -n: dont resolve names 
        //-A [addressFamilyName]: address families, inet, inet6, ax25, netrom, ipx, ddp, x25
            netstat {}...
            netstat -lptu
            netstat -lpta
            netstat -A inet -p
    
    //List ip adddresses
        ifconfig
    //Set the params of the network interface which are specific to the wireless operation
        iwconfig
    //Display additional info from a wireless network interface that is not displayed by iwconfig
        iwlist 
    //Protocol used to ask the router for infomation of other connected devices on the network
    //none: list arp table
        arp {}...
    //Point to point conenction between two nodes, encapsulate packets in IP packets and send over IP infrastructure
        iptunnel {}...
    //
        nameif
        
iproute2>
    //n: arp, route: netstat -r, maddr: netstat -g
    //a: addresses, link: netstat -i, -s: ip stats (these 3 act as ifconfig)
        ip {}...
    //iwconfig
        iw
    //nameif
        ip link
        ifrename
    //-t: tcp connections not in listen mode (servers), -u: udp not in LM, -x: unix sockets pipe connections,
    //-a: all connections EG -ta for all tcp connections, -l: listening connections, -n: dont resolve service names, -o: options
    //-s: prints statstics, --ipv4: ip version 4  
        ss {}...

